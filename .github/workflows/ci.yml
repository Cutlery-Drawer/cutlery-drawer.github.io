name: CI

on:
    push:         {branches: [master, ci]}
    pull_request: {branches: [master, ci]}
    workflow_dispatch:
        # Enable manual execution via Actions tab

jobs:
    test:
        name: Test on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}-latest
        strategy:
            matrix:
                os: [Ubuntu, macOS, Windows]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install GNU on Windows
              if:   startsWith(matrix.os, 'Windows')
              run: |
                  choco install gow
                  refreshenv

            - name:  Run package tests
              shell: sh
              env:
                  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
              run: |
                  echo "$DUMMY_TOKEN"
                  npm install c8 coveralls
                  npx c8 ./index.mjs

            - name: List environment variables
              shell: sh
              run: |
                  printf 'CI:                        %s\n'  "${CI}"
                  printf 'GITHUB_ACTION:             %s\n'  "${GITHUB_ACTION}"
                  printf 'GITHUB_ACTION_PATH:        %s\n'  "${GITHUB_ACTION_PATH}"
                  printf 'GITHUB_ACTION_REPOSITORY:  %s\n'  "${GITHUB_ACTION_REPOSITORY}"
                  printf 'GITHUB_ACTIONS:            %s\n'  "${GITHUB_ACTIONS}"
                  printf 'GITHUB_ACTOR:              %s\n'  "${GITHUB_ACTOR}"
                  printf 'GITHUB_API_URL:            %s\n'  "${GITHUB_API_URL}"
                  printf 'GITHUB_BASE_REF:           %s\n'  "${GITHUB_BASE_REF}"
                  printf 'GITHUB_ENV:                %s\n'  "${GITHUB_ENV}"
                  printf 'GITHUB_EVENT_NAME:         %s\n'  "${GITHUB_EVENT_NAME}"
                  printf 'GITHUB_EVENT_PATH:         %s\n'  "${GITHUB_EVENT_PATH}"
                  printf 'GITHUB_GRAPHQL_URL:        %s\n'  "${GITHUB_GRAPHQL_URL}"
                  printf 'GITHUB_HEAD_REF:           %s\n'  "${GITHUB_HEAD_REF}"
                  printf 'GITHUB_JOB:                %s\n'  "${GITHUB_JOB}"
                  printf 'GITHUB_PATH:               %s\n'  "${GITHUB_PATH}"
                  printf 'GITHUB_REF:                %s\n'  "${GITHUB_REF}"
                  printf 'GITHUB_REF_NAME:           %s\n'  "${GITHUB_REF_NAME}"
                  printf 'GITHUB_REF_PROTECTED:      %s\n'  "${GITHUB_REF_PROTECTED}"
                  printf 'GITHUB_REF_TYPE:           %s\n'  "${GITHUB_REF_TYPE}"
                  printf 'GITHUB_REPOSITORY:         %s\n'  "${GITHUB_REPOSITORY}"
                  printf 'GITHUB_REPOSITORY_OWNER:   %s\n'  "${GITHUB_REPOSITORY_OWNER}"
                  printf 'GITHUB_RETENTION_DAYS:     %s\n'  "${GITHUB_RETENTION_DAYS}"
                  printf 'GITHUB_RUN_ATTEMPT:        %s\n'  "${GITHUB_RUN_ATTEMPT}"
                  printf 'GITHUB_RUN_ID:             %s\n'  "${GITHUB_RUN_ID}"
                  printf 'GITHUB_RUN_NUMBER:         %s\n'  "${GITHUB_RUN_NUMBER}"
                  printf 'GITHUB_SERVER_URL:         %s\n'  "${GITHUB_SERVER_URL}"
                  printf 'GITHUB_SHA:                %s\n'  "${GITHUB_SHA}"
                  printf 'GITHUB_STEP_SUMMARY:       %s\n'  "${GITHUB_STEP_SUMMARY}"
                  printf 'GITHUB_WORKFLOW:           %s\n'  "${GITHUB_WORKFLOW}"
                  printf 'GITHUB_WORKSPACE:          %s\n'  "${GITHUB_WORKSPACE}"
                  printf 'RUNNER_ARCH:               %s\n'  "${RUNNER_ARCH}"
                  printf 'RUNNER_DEBUG:              %s\n'  "${RUNNER_DEBUG}"
                  printf 'RUNNER_NAME:               %s\n'  "${RUNNER_NAME}"
                  printf 'RUNNER_OS:                 %s\n'  "${RUNNER_OS}"
                  printf 'RUNNER_TEMP:               %s\n'  "${RUNNER_TEMP}"
                  printf 'RUNNER_TOOL_CACHE:         %s\n'  "${RUNNER_TOOL_CACHE}"


            - name: Report coverage
              shell: sh
              if: false
              env:
                  COVERALLS_SERVICE_NAME:   github
                  COVERALLS_GIT_COMMIT:     ${{ env.GITHUB_SHA }}
                  COVERALLS_GIT_BRANCH:     ${{ env.GITHUB_REF }}
                  COVERALLS_REPO_TOKEN:     ${{ secrets.COVERALLS_REPO_TOKEN }}
              run: |
                  npx c8 report --reporter text-lcov | npx coveralls
